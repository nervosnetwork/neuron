@import '../../styles/mixin.scss';
$textfieldWidth: calc(100vw - 370px);

.outputContainer {
  position: relative;
  display: grid;
  grid-template: 'address scanner add-or-remove' auto 'amount max add-or-remove' auto 'locktime locktime locktime' auto/ $textfieldWidth 50px 30px;
  grid-gap: 15px;
  padding: 28px 0 34px;
  box-sizing: border-box;
  border-bottom: 1px solid #b3b3b3;

  .addressField {
    grid-area: address;
  }

  button[aria-label='qr-btn'] {
    display: none;
    position: relative;
    padding-top: 10px;
    grid-area: scanner;

    &:hover {
      &:after {
        content: attr(data-title);
        position: absolute;
        bottom: -20px;
        right: -45px;
        font-size: 0.875rem;
        letter-spacing: 0.5px;
        color: #000;
        box-shadow: 1px 2px 6px 0 rgba(97, 97, 97, 0.5);
        background: #fff;
        white-space: nowrap;
        padding: 5px 16px;
        z-index: 1;
      }
    }
  }

  .fullAddrInfo {
    display: flex;
    position: absolute;
    width: calc(100vw - 370px);
    height: 1.375rem;
    top: 50%;
    transform: translateY(-102%);
    color: #d50000;

    span {
      display: block;
      letter-spacing: 0.45px;
      font-size: 0.5625rem;
      line-height: 0.6875rem;
      word-break: break-all;
    }

    svg {
      flex-shrink: 0;
      width: 8px;
      height: 8px;
      margin-right: 5px;
      margin-top: 0.125rem;
    }
  }

  .amountField {
    grid-area: amount;
  }

  .maxBtn {
    grid-area: max;
  }

  .iconBtns {
    grid-area: add-or-remove;
    padding: 30px 0;
  }
}

.info {
  width: $textfieldWidth;
  display: grid;
  grid-template: 'textfield' auto;
  grid-gap: 15px;
  padding: 24px 0 34px;
}

.balance {
  margin-bottom: 29px;
  display: flex;
  justify-content: flex-start;
  align-items: center;

  & > div {
    position: relative;
  }

  label {
    margin-right: 25px;

    &:after {
      display: inline;
      content: ':';
    }
  }

  label,
  span {
    @include BoldText;
    font-size: 1.375rem;
    letter-spacing: 1.1;
  }

  .balancePrompt {
    @include BoldText;
    position: absolute;
    top: 100%;
    left: 0;
    color: var(--nervos-green);
    font-size: 0.8rem;
    margin-top: 3px;
    word-break: keep-all;
    white-space: nowrap;
  }
}

.iconBtns {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

.iconBtn {
  appearance: none;
  border: none;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 2rem;
  height: 2rem;
  padding: 0;
  background: none;

  img {
    height: 100%;
    width: 100%;
  }

  &[disabled] {
    img[data-type='add'] {
      filter: brightness(1.2) grayscale(1);
    }

    img[data-type='remove'] {
      filter: contrast(0.4) grayscale(1) brightness(2);
    }
  }
}

.maxBtn {
  width: 3.125rem;
  height: 1.625rem;
  min-width: auto;
  margin-top: 22px;
  padding: 0;
  line-height: 0;

  &[data-is-on='true'] {
    color: rgba(255, 255, 255, 0.8) !important;
    box-shadow: inset 0 0 50px rgba(0, 0, 0, 0.5) !important;
  }
}

.actions {
  @include formFooter;
}

.scanBtn {
  line-height: 1;
  background: none;
  border: none;
  outline: none;

  svg {
    pointer-events: none;
  }

  &:hover {
    g,
    path {
      stroke: var(--nervos-green);
      fill: var(--nervos-green);
    }
  }

  &.busy {
    cursor: progress !important;
    stroke: #666;
    fill: #666;
  }
}

.locktime {
  grid-area: locktime;
  color: #000;
  display: flex;
  align-items: center;
  font-size: 14px;

  .icon {
    height: 15px;
    width: 15px;
    pointer-events: none;

    &[alt$='calendar'] {
      margin-right: 6px;
    }

    &[data-status='active'] {
      display: none;
    }
  }

  button {
    @include RegularText;
    appearance: none;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0;
    padding: 0;
    font-size: 14px !important;
    background-color: transparent;
    border: none;

    &:hover {
      img[data-status='inactive'] {
        display: none;
      }

      img[data-status='active'] {
        display: block;
      }
    }
  }

  &[data-status='unset']:hover {
    button {
      color: var(--nervos-green);
    }

    .icon {
      &[data-status='active'] {
        display: block;
      }

      &[data-status='inactive'] {
        display: none;
      }
    }
  }

  &[data-status='set'] {
    button {
      margin-left: 13px;

      &:hover {
        color: var(--nervos-green);
      }
    }
  }
}
